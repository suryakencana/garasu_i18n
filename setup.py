# -*- coding: utf-8 -*-

from setuptools import setup, find_packages
from codecs import open
from contextlib import contextmanager

from setuptools.command.sdist import sdist as _sdist
from setuptools.command.test import test as _test

###############################################################################

NAME = 'garasu_i18n'
DESC = 'Garasu i18n'
AUTHOR = 'Nanang Suryadi'
AUTHOR_EMAIL = 'nanang.ask@gmail.com'
URL = 'https://github.com/suryakencana/garasu_i18n.git'
LICENSE = 'GNU GPL License'
KEYWORDS = ['model', 'SQLAlchemy', 'pyramid']
CLASSIFIERS = [
    'Development Status :: 4 - Beta',
    'Environment :: Console',
    'Environment :: Web Environment',
    'Framework :: Pyramid',
    'Intended Audience :: Developers',
    'License :: OSI Approved :: BSD License',
    'Operating System :: OS Independent',
    'Programming Language :: Python :: 2.7. 3.4+',
]
INSTALL_REQUIRES = [
    'pyramid',
    'Babel',
]
EXTRAS_REQUIRE = {
    'dev': [],
}
ENTRY_POINTS = {}

with open('README.rst', encoding='utf-8') as fp:
    LONGDESC = fp.read()

###############################################################################

VERSION = __import__('garasu_i18n').__version__
VERSION_FILE = 'garasu_i18n/_version.py'
VERSION_TPL = ("# This version file is autogenerated from Git data.\n"
               "def get_version():\n"
               "    return '{version}'\n")


@contextmanager
def static_version_file():
    with open(VERSION_FILE) as fp:
        previous = fp.read()
    with open(VERSION_FILE, 'w') as fp:
        fp.write(VERSION_TPL.format(version=VERSION))
    print('updated {} with version {}'.format(VERSION_FILE, VERSION))
    yield
    with open(VERSION_FILE, 'w') as fp:
        fp.write(previous)
    print('replaced original {}'.format(VERSION_FILE))


class sdist(_sdist):
    def run(self):
        with static_version_file():
            return _sdist.run(self)


class test(_test):
    def run(self):
        print('please run tox instead')


if __name__ == "__main__":
    setup(name=NAME,
          version=VERSION,
          description=DESC,
          long_description=LONGDESC,
          classifiers=CLASSIFIERS,
          keywords=KEYWORDS,
          author=AUTHOR,
          author_email=AUTHOR_EMAIL,
          url=URL,
          license=LICENSE,
          include_package_data=True,
          install_requires=INSTALL_REQUIRES,
          message_extractors={"garasu_i18n": [
              ("**.py", "python", None),
              ('**.html', 'mako', {'input_encoding': 'utf-8'}),
              ('**.mako', 'mako', {'input_encoding': 'utf-8'}),
              ('static/**', 'ignore', None)
          ]
          },
          extras_require=EXTRAS_REQUIRE,
          entry_points=ENTRY_POINTS,
          cmdclass={'sdist': sdist,
                    'test': test},
          packages=find_packages(include=['garasu_i18n', 'garasu_i18n.*']),
          zip_safe=False)
